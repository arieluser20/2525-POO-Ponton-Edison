import tkinter as tk
from tkinter import messagebox

class ListaTareasApp:
    def __init__(self, root):
        self.root = root
        root.title("Lista de Tareas")
        root.geometry("400x400")
        root.resizable(False, False)

        # Lista interna para almacenar tareas y su estado
        self.tareas = []  # Cada tarea es un dict: {"texto": str, "completada": bool}

        # Campo de entrada para nueva tarea
        tk.Label(root, text="Nueva tarea:", font=("Arial", 12)).pack(pady=10)
        self.entry_tarea = tk.Entry(root, font=("Arial", 12), width=30)
        self.entry_tarea.pack(pady=5)
        self.entry_tarea.bind("<Return>", lambda event: self.agregar_tarea())

        # Botones de acción
        frame_botones = tk.Frame(root)
        frame_botones.pack(pady=10)
        tk.Button(frame_botones, text="Añadir Tarea", command=self.agregar_tarea, width=15, bg="#2ecc71", fg="white").pack(side="left", padx=5)
        tk.Button(frame_botones, text="Marcar como Completada", command=self.marcar_completada, width=20, bg="#3498db", fg="white").pack(side="left", padx=5)
        tk.Button(frame_botones, text="Eliminar Tarea", command=self.eliminar_tarea, width=15, bg="#e74c3c", fg="white").pack(side="left", padx=5)

        # Listbox para mostrar tareas
        self.listbox = tk.Listbox(root, font=("Arial", 12), width=40, height=15, selectmode=tk.SINGLE)
        self.listbox.pack(pady=10)
        self.listbox.bind("<Double-Button-1>", lambda event: self.marcar_completada())

    def agregar_tarea(self):
        """Añade una nueva tarea a la lista."""
        texto = self.entry_tarea.get().strip()
        if not texto:
            messagebox.showwarning("Campo vacío", "Escribe una tarea antes de añadir.")
            return
        self.tareas.append({"texto": texto, "completada": False})
        self.actualizar_listbox()
        self.entry_tarea.delete(0, tk.END)

    def marcar_completada(self):
        """Marca la tarea seleccionada como completada y actualiza el estilo."""
        seleccion = self.listbox.curselection()
        if not seleccion:
            messagebox.showinfo("Sin selección", "Selecciona una tarea para marcar como completada.")
            return
        idx = seleccion[0]
        self.tareas[idx]["completada"] = True
        self.actualizar_listbox()

    def eliminar_tarea(self):
        """Elimina la tarea seleccionada de la lista."""
        seleccion = self.listbox.curselection()
        if not seleccion:
            messagebox.showinfo("Sin selección", "Selecciona una tarea para eliminar.")
            return
        idx = seleccion[0]
        del self.tareas[idx]
        self.actualizar_listbox()

    def actualizar_listbox(self):
        """Actualiza la visualización de la lista de tareas."""
        self.listbox.delete(0, tk.END)
        for tarea in self.tareas:
            texto = tarea["texto"]
            if tarea["completada"]:
                texto = f"✔️ {texto}"
            self.listbox.insert(tk.END, texto)
            # Cambia el color de la tarea completada
            if tarea["completada"]:
                self.listbox.itemconfig(tk.END, fg="gray", selectbackground="#d5f5e3")
            else:
                self.listbox.itemconfig(tk.END, fg="black", selectbackground="#aed6f1")

if __name__ == "__main__":
    root = tk.Tk()
    app = ListaTareasApp(root)
    root.mainloop()
